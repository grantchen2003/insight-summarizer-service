// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v4.23.3
// source: file_chunks_service.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FileChunkPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId         string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	FilePath       string `protobuf:"bytes,2,opt,name=file_path,json=filePath,proto3" json:"file_path,omitempty"`
	ChunkIndex     int32  `protobuf:"varint,3,opt,name=chunk_index,json=chunkIndex,proto3" json:"chunk_index,omitempty"`
	NumTotalChunks int32  `protobuf:"varint,4,opt,name=num_total_chunks,json=numTotalChunks,proto3" json:"num_total_chunks,omitempty"`
	Content        []byte `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *FileChunkPayload) Reset() {
	*x = FileChunkPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_file_chunks_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileChunkPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileChunkPayload) ProtoMessage() {}

func (x *FileChunkPayload) ProtoReflect() protoreflect.Message {
	mi := &file_file_chunks_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileChunkPayload.ProtoReflect.Descriptor instead.
func (*FileChunkPayload) Descriptor() ([]byte, []int) {
	return file_file_chunks_service_proto_rawDescGZIP(), []int{0}
}

func (x *FileChunkPayload) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *FileChunkPayload) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *FileChunkPayload) GetChunkIndex() int32 {
	if x != nil {
		return x.ChunkIndex
	}
	return 0
}

func (x *FileChunkPayload) GetNumTotalChunks() int32 {
	if x != nil {
		return x.NumTotalChunks
	}
	return 0
}

func (x *FileChunkPayload) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

type SaveFileChunksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileChunkPayloads []*FileChunkPayload `protobuf:"bytes,1,rep,name=file_chunk_payloads,json=fileChunkPayloads,proto3" json:"file_chunk_payloads,omitempty"`
}

func (x *SaveFileChunksRequest) Reset() {
	*x = SaveFileChunksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_file_chunks_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveFileChunksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveFileChunksRequest) ProtoMessage() {}

func (x *SaveFileChunksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_file_chunks_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveFileChunksRequest.ProtoReflect.Descriptor instead.
func (*SaveFileChunksRequest) Descriptor() ([]byte, []int) {
	return file_file_chunks_service_proto_rawDescGZIP(), []int{1}
}

func (x *SaveFileChunksRequest) GetFileChunkPayloads() []*FileChunkPayload {
	if x != nil {
		return x.FileChunkPayloads
	}
	return nil
}

type FileChunkSaveStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FilePath         string `protobuf:"bytes,1,opt,name=file_path,json=filePath,proto3" json:"file_path,omitempty"`
	IsLastSavedChunk bool   `protobuf:"varint,2,opt,name=is_last_saved_chunk,json=isLastSavedChunk,proto3" json:"is_last_saved_chunk,omitempty"`
}

func (x *FileChunkSaveStatus) Reset() {
	*x = FileChunkSaveStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_file_chunks_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileChunkSaveStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileChunkSaveStatus) ProtoMessage() {}

func (x *FileChunkSaveStatus) ProtoReflect() protoreflect.Message {
	mi := &file_file_chunks_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileChunkSaveStatus.ProtoReflect.Descriptor instead.
func (*FileChunkSaveStatus) Descriptor() ([]byte, []int) {
	return file_file_chunks_service_proto_rawDescGZIP(), []int{2}
}

func (x *FileChunkSaveStatus) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *FileChunkSaveStatus) GetIsLastSavedChunk() bool {
	if x != nil {
		return x.IsLastSavedChunk
	}
	return false
}

type SaveFileChunksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileChunkStatuses []*FileChunkSaveStatus `protobuf:"bytes,1,rep,name=file_chunk_statuses,json=fileChunkStatuses,proto3" json:"file_chunk_statuses,omitempty"`
}

func (x *SaveFileChunksResponse) Reset() {
	*x = SaveFileChunksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_file_chunks_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveFileChunksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveFileChunksResponse) ProtoMessage() {}

func (x *SaveFileChunksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_file_chunks_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveFileChunksResponse.ProtoReflect.Descriptor instead.
func (*SaveFileChunksResponse) Descriptor() ([]byte, []int) {
	return file_file_chunks_service_proto_rawDescGZIP(), []int{3}
}

func (x *SaveFileChunksResponse) GetFileChunkStatuses() []*FileChunkSaveStatus {
	if x != nil {
		return x.FileChunkStatuses
	}
	return nil
}

type GetSortedFileChunksContentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	FilePath string `protobuf:"bytes,2,opt,name=file_path,json=filePath,proto3" json:"file_path,omitempty"`
}

func (x *GetSortedFileChunksContentRequest) Reset() {
	*x = GetSortedFileChunksContentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_file_chunks_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSortedFileChunksContentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSortedFileChunksContentRequest) ProtoMessage() {}

func (x *GetSortedFileChunksContentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_file_chunks_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSortedFileChunksContentRequest.ProtoReflect.Descriptor instead.
func (*GetSortedFileChunksContentRequest) Descriptor() ([]byte, []int) {
	return file_file_chunks_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetSortedFileChunksContentRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetSortedFileChunksContentRequest) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

type FileChunkContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content []byte `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *FileChunkContent) Reset() {
	*x = FileChunkContent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_file_chunks_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileChunkContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileChunkContent) ProtoMessage() {}

func (x *FileChunkContent) ProtoReflect() protoreflect.Message {
	mi := &file_file_chunks_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileChunkContent.ProtoReflect.Descriptor instead.
func (*FileChunkContent) Descriptor() ([]byte, []int) {
	return file_file_chunks_service_proto_rawDescGZIP(), []int{5}
}

func (x *FileChunkContent) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

type GetSortedFileChunksContentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileChunksContent []*FileChunkContent `protobuf:"bytes,1,rep,name=file_chunks_content,json=fileChunksContent,proto3" json:"file_chunks_content,omitempty"`
}

func (x *GetSortedFileChunksContentResponse) Reset() {
	*x = GetSortedFileChunksContentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_file_chunks_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSortedFileChunksContentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSortedFileChunksContentResponse) ProtoMessage() {}

func (x *GetSortedFileChunksContentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_file_chunks_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSortedFileChunksContentResponse.ProtoReflect.Descriptor instead.
func (*GetSortedFileChunksContentResponse) Descriptor() ([]byte, []int) {
	return file_file_chunks_service_proto_rawDescGZIP(), []int{6}
}

func (x *GetSortedFileChunksContentResponse) GetFileChunksContent() []*FileChunkContent {
	if x != nil {
		return x.FileChunksContent
	}
	return nil
}

var File_file_chunks_service_proto protoreflect.FileDescriptor

var file_file_chunks_service_proto_rawDesc = []byte{
	0x0a, 0x19, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xad, 0x01, 0x0a, 0x10,
	0x46, 0x69, 0x6c, 0x65, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c,
	0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69,
	0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x68, 0x75,
	0x6e, 0x6b, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x28, 0x0a, 0x10, 0x6e, 0x75, 0x6d, 0x5f, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0e, 0x6e, 0x75, 0x6d, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x68, 0x75, 0x6e, 0x6b,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x5a, 0x0a, 0x15, 0x53,
	0x61, 0x76, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x41, 0x0a, 0x13, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x63, 0x68, 0x75,
	0x6e, 0x6b, 0x5f, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x50, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x52, 0x11, 0x66, 0x69, 0x6c, 0x65, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x50,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x22, 0x61, 0x0a, 0x13, 0x46, 0x69, 0x6c, 0x65, 0x43,
	0x68, 0x75, 0x6e, 0x6b, 0x53, 0x61, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b,
	0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x2d, 0x0a, 0x13, 0x69,
	0x73, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x73, 0x61, 0x76, 0x65, 0x64, 0x5f, 0x63, 0x68, 0x75,
	0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x69, 0x73, 0x4c, 0x61, 0x73, 0x74,
	0x53, 0x61, 0x76, 0x65, 0x64, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x22, 0x5e, 0x0a, 0x16, 0x53, 0x61,
	0x76, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x13, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x63, 0x68, 0x75,
	0x6e, 0x6b, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x53, 0x61, 0x76,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x11, 0x66, 0x69, 0x6c, 0x65, 0x43, 0x68, 0x75,
	0x6e, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x22, 0x59, 0x0a, 0x21, 0x47, 0x65,
	0x74, 0x53, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x68, 0x75, 0x6e, 0x6b,
	0x73, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65,
	0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x50, 0x61, 0x74, 0x68, 0x22, 0x2c, 0x0a, 0x10, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x68, 0x75,
	0x6e, 0x6b, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x22, 0x67, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x53, 0x6f, 0x72, 0x74, 0x65, 0x64,
	0x46, 0x69, 0x6c, 0x65, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x13, 0x66, 0x69, 0x6c,
	0x65, 0x5f, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x68, 0x75,
	0x6e, 0x6b, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x11, 0x66, 0x69, 0x6c, 0x65, 0x43,
	0x68, 0x75, 0x6e, 0x6b, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x32, 0xbd, 0x01, 0x0a,
	0x11, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x41, 0x0a, 0x0e, 0x53, 0x61, 0x76, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x68,
	0x75, 0x6e, 0x6b, 0x73, 0x12, 0x16, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x43,
	0x68, 0x75, 0x6e, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x53,
	0x61, 0x76, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x65, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x53, 0x6f, 0x72, 0x74,
	0x65, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x12, 0x22, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x46,
	0x69, 0x6c, 0x65, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x6f, 0x72,
	0x74, 0x65, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x17, 0x5a, 0x15,
	0x2f, 0x66, 0x69, 0x6c, 0x65, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_file_chunks_service_proto_rawDescOnce sync.Once
	file_file_chunks_service_proto_rawDescData = file_file_chunks_service_proto_rawDesc
)

func file_file_chunks_service_proto_rawDescGZIP() []byte {
	file_file_chunks_service_proto_rawDescOnce.Do(func() {
		file_file_chunks_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_file_chunks_service_proto_rawDescData)
	})
	return file_file_chunks_service_proto_rawDescData
}

var file_file_chunks_service_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_file_chunks_service_proto_goTypes = []interface{}{
	(*FileChunkPayload)(nil),                   // 0: FileChunkPayload
	(*SaveFileChunksRequest)(nil),              // 1: SaveFileChunksRequest
	(*FileChunkSaveStatus)(nil),                // 2: FileChunkSaveStatus
	(*SaveFileChunksResponse)(nil),             // 3: SaveFileChunksResponse
	(*GetSortedFileChunksContentRequest)(nil),  // 4: GetSortedFileChunksContentRequest
	(*FileChunkContent)(nil),                   // 5: FileChunkContent
	(*GetSortedFileChunksContentResponse)(nil), // 6: GetSortedFileChunksContentResponse
}
var file_file_chunks_service_proto_depIdxs = []int32{
	0, // 0: SaveFileChunksRequest.file_chunk_payloads:type_name -> FileChunkPayload
	2, // 1: SaveFileChunksResponse.file_chunk_statuses:type_name -> FileChunkSaveStatus
	5, // 2: GetSortedFileChunksContentResponse.file_chunks_content:type_name -> FileChunkContent
	1, // 3: FileChunksService.SaveFileChunks:input_type -> SaveFileChunksRequest
	4, // 4: FileChunksService.GetSortedFileChunksContent:input_type -> GetSortedFileChunksContentRequest
	3, // 5: FileChunksService.SaveFileChunks:output_type -> SaveFileChunksResponse
	6, // 6: FileChunksService.GetSortedFileChunksContent:output_type -> GetSortedFileChunksContentResponse
	5, // [5:7] is the sub-list for method output_type
	3, // [3:5] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_file_chunks_service_proto_init() }
func file_file_chunks_service_proto_init() {
	if File_file_chunks_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_file_chunks_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileChunkPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_file_chunks_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveFileChunksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_file_chunks_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileChunkSaveStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_file_chunks_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveFileChunksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_file_chunks_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSortedFileChunksContentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_file_chunks_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileChunkContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_file_chunks_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSortedFileChunksContentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_file_chunks_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_file_chunks_service_proto_goTypes,
		DependencyIndexes: file_file_chunks_service_proto_depIdxs,
		MessageInfos:      file_file_chunks_service_proto_msgTypes,
	}.Build()
	File_file_chunks_service_proto = out.File
	file_file_chunks_service_proto_rawDesc = nil
	file_file_chunks_service_proto_goTypes = nil
	file_file_chunks_service_proto_depIdxs = nil
}
